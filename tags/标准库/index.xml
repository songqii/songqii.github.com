<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>标准库 - Sq&#39;s blog</title>
    <link>https://songqii.github.io/tags/%E6%A0%87%E5%87%86%E5%BA%93/</link>
    <description>Recent content in 标准库 on Sq&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 11 Jun 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://songqii.github.io/tags/%E6%A0%87%E5%87%86%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>golang标准库-sort</title>
      <link>https://songqii.github.io/posts/golang-lib-sort/</link>
      <pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://songqii.github.io/posts/golang-lib-sort/</guid>
      <description>介绍  sort包提供了排序切片和用户自定义数据集的函数  使用 对struct进行排序
package sort_test import ( &amp;quot;fmt&amp;quot; &amp;quot;sort&amp;quot; ) type Person struct { Name string Age int } func (p Person) String() string { return fmt.Sprintf(&amp;quot;%s: %d&amp;quot;, p.Name, p.Age) } // ByAge implements sort.Interface for []Person based on // the Age field. type ByAge []Person func (a ByAge) Len() int { return len(a) } func (a ByAge) Swap(i, j int) { a[i], a[j] = a[j], a[i] } func (a ByAge) Less(i, j int) bool { return a[i].</description>
    </item><item>
      <title>golang标准库笔记</title>
      <link>https://songqii.github.io/posts/golang-lib/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://songqii.github.io/posts/golang-lib/</guid>
      <description> text/template strings strconv sort </description>
    </item>
  </channel>
</rss>